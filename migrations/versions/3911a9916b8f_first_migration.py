"""first_migration

Revision ID: 3911a9916b8f
Revises: 
Create Date: 2024-10-28 13:44:49.917320

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3911a9916b8f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('document_text', if_exists=True)
    op.drop_table('document', if_exists=True)
    op.create_table('document',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('path', sa.String(), nullable=False),
                    sa.Column('date', sa.DateTime(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_document_id'), 'document', ['id'], unique=False)

    op.create_table('document_text',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('id_doc', sa.Integer(), nullable=False),
                    sa.Column('text', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(['id_doc'], ['document.id'], name='document_text_id_doc_fkey'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_document_text_id'), 'document_text', ['id'], unique=False)

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('document_text')
    op.create_table('document',
                    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
                    sa.Column('path', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='document_pkey')
                    )
    op.create_index('ix_document_id', 'document', ['id'], unique=False)

    op.create_table('document_text',
                    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
                    sa.Column('id_doc', sa.Integer(), autoincrement=False, nullable=False),
                    sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['id_doc'], ['document.id'], name='document_text_id_doc_fkey'),
                    sa.PrimaryKeyConstraint('id', name='document_text_pkey')
                    )
    op.create_index(op.f('ix_document_text_id'), 'document_text', ['id'], unique=False)